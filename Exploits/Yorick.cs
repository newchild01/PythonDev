using System;
using System.Collections.Generic;
using Color = System.Drawing.Color;
using System.Linq;
using LeagueSharp;
using LeagueSharp.Common;
using SharpDX;

namespace Exploits
{
    class Yorick
    {
        static Spell E; //Den E spell halt
        static Obj_AI_Base Player;
        static Menu YorickExploit; //wir wollen von überall auf das menü zugreifen also müüsen wir das hier deklarieren
        public Yorick(){ //normalerweise kommt das alles in CustomEvents.Game.OnGameLoad, siehe programm.cs
            Game.PrintChat("Loaded Yorick Exploits"); // Ne normale Ausgabe in den Gamechat
            Obj_AI_Base Player = ObjectManager.Player; // wir wollen ja einfach nur Player schreiben und nicht immer "ObjectManager.Player"
            Menu YorickExploits = new Menu("Yorick Exploits", "Yorick Exploits", true); //Das Hauptmenü. Deswegen RootMenu = true. Rootmenus werden immer gezeigt
            YorickExploits.AddSubMenu(new Menu("Yorick E exploit", "YorickE")); //Füge ein Untermü hinzu
           YorickExploits.SubMenu("YorickE").AddItem(new MenuItem("UseE", "Use Exploit!").SetValue(new KeyBind("P".ToCharArray()[0], KeyBindType.Press))); //Füge ein Untermenüpunkt hinzu und nutze den Buchstaben P als "asktivator" KeyBindType.Press und .Toggle erklären sich
            YorickExploits.AddToMainMenu(); // das Meü darstellen lassen
            Game.OnGameUpdate += onTick; //damit sagen wir l# das die Funktion onTick unsere Hauptschleife ist. In dem Game. namespace findest du noch andere Funktionen dieser Art wie Game.OnDraw usw
            E = new Spell(SpellSlot.E, 550f); //Halt der E slot, die zahl ist die range, siehe Google

        }
        static void onTick(EventArgs args){ // die funktion OnGameUpdate hat ja auch argumente die übergeben werden müssen
            Game.PrintChat(Player.ArmorMaterial);
            if (YorickExploit.Item("UseE").GetValue<bool>() == true)
            { //wenn man P gedrückt hat. 
                Game.PrintChat("CastE");
                E.Cast(Player, true); // true bedeutet packets nutzen, Wir casten den E also auf unsere Position mit packets
            } 
        } 

        

    }
}